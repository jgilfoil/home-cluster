# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
  namespace: ${NAMESPACE}
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: storage
    - name: vpn-gateway
      namespace: network
  values:
    defaultPodOptions:
      annotations:
        setGateway: "true"
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/radarr
              tag: 5.6.0
            env:
              TZ: "America/Denver"
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 80
              RADAAR_THEME: dark
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      - sh
                      - -c
                      - /opt/probe/health_check.sh
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                memory: 250Mi
                cpu: 100m
              limits:
                memory: 2Gi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Radarr
          gethomepage.dev/icon: radarr.svg
          gethomepage.dev/description: Movie Download Manager
          gethomepage.dev/widget.type: radarr
          gethomepage.dev/widget.url: http://radarr.media.svc
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_RADARR_TOKEN}}` }}"
        hosts:
          - host: &host "radarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        existingClaim: radarr
      media:
        type: nfs
        server: "${NAS_ADDR:-0.0.0.0}"
        path: /volume2/Media
        advancedMounts:
          radarr:
            app:
              - path: /media
                readOnly: false
              - path: /downloads
                readOnly: false
                subPath: Downloads
      tmp:
        type: emptyDir
      scripts:
        type: configMap
        name: reverse-symlink-radarr
        defaultMode: 0777
      healthcheck:
        type: configMap
        name: health-check
        defaultMode: 0755
        globalMounts:
          - path: /opt/probe

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app limesurvey
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: limesurvey
      # Get the latest version from https://github.com/martialblog/helm-charts/tree/main/charts/limesurvey
      version: "0.9.0" # Please verify and update to the latest chart version
      sourceRef:
        kind: HelmRepository
        name: martialblog
        namespace: flux-system
      interval: 30m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: *app
    limesurvey:
      admin:
        user: admin
        # password: ${LIMESURVEY_ADMIN_PASSWORD} # Sourced from secret.sops.yaml
        # Use existingSecret to load admin password
        existingSecret: limesurvey-secret # Name of the k8s secret we will create
        existingSecretAdminPasswordKey: LIMESURVEY_ADMIN_PASSWORD
        email: admin@${SECRET_DOMAIN}
      publicUrl: https://survey.${SECRET_DOMAIN}/
    # Configure persistence to use the PVC we defined
    persistence:
      enabled: true
      existingClaim: "limesurvey-uploads-pvc"
      # subPath: "" # Set this if your NFS PV corresponds to a subfolder on the NAS for uploads
      # Remove size and storageClassName as we use existingClaim
    mariadb:
      enabled: true
      auth:
        # rootPassword: ${LIMESURVEY_DB_ROOT_PASSWORD} # Sourced from secret.sops.yaml
        # password: ${LIMESURVEY_DB_PASSWORD} # Sourced from secret.sops.yaml
        # Use existingSecret to load DB passwords
        existingSecret: limesurvey-secret # Name of the k8s secret
        existingSecretRootPasswordKey: LIMESURVEY_DB_ROOT_PASSWORD
        existingSecretPasswordKey: LIMESURVEY_DB_PASSWORD
        database: limesurvey
        username: limesurvey
      primary:
        persistence:
          enabled: true
          existingClaim: "limesurvey-mariadb-pvc"
    service:
      main:
        ports:
          http:
            port: 8080 # Default LimeSurvey port in the chart
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          cert-manager.io/cluster-issuer: letsencrypt-production # Uncomment if using cert-manager
        hosts:
          - host: &host survey.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service: # The chart creates a service named <release_name>-limesurvey by default
                  name: *app # This will be 'limesurvey'
                  port:
                    number: 8080
        tls:
          - hosts:
              - *host
            secretName: survey-${SECRET_DOMAIN}-tls # Optional: if cert-manager is creating the cert
      internal: # For homepage integration
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Utilities # Or another suitable group
          gethomepage.dev/name: LimeSurvey
          gethomepage.dev/icon: limesurvey.png # You might need to find a suitable icon URL or place one
          gethomepage.dev/description: "Survey Application"
          # external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}" # If needed for internal resolution
        hosts:
          - host: *host # Re-use the same host for internal access via homepage
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: *app
                  port:
                    number: 8080
    # resources: # Adjust as needed
    #   requests:
    #     cpu: 200m
    #     memory: 256Mi
    #   limits:
    #     cpu: 500m
    #     memory: 512Mi 